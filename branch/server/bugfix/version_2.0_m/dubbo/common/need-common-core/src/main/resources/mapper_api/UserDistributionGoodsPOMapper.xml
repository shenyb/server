<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.need.common.core.dao.jdbc.distribution.UserDistributionGoodsDAO">
	<resultMap id="BaseResultMap"
		type="com.need.common.domain.po.api.distribution.UserDistributionGoodsPO">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
		<result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_id, goods_id, goods_name, create_time, update_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from user_distribution_goods
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from user_distribution_goods
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert"
		parameterType="com.need.common.domain.po.api.distribution.UserDistributionGoodsPO">
		insert into user_distribution_goods (id, user_id, goods_id,
		goods_name, create_time, update_time
		)
		values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR},
		#{goodsId,jdbcType=VARCHAR},
		#{goodsName,jdbcType=VARCHAR}, now(),now()
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.need.common.domain.po.api.distribution.UserDistributionGoodsPO">
		insert into user_distribution_goods
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="goodsId != null">
				goods_id,
			</if>
			<if test="goodsName != null">
				goods_name,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="goodsId != null">
				#{goodsId,jdbcType=VARCHAR},
			</if>
			<if test="goodsName != null">
				#{goodsName,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.need.common.domain.po.api.distribution.UserDistributionGoodsPO">
		update user_distribution_goods
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="goodsId != null">
				goods_id = #{goodsId,jdbcType=VARCHAR},
			</if>
			<if test="goodsName != null">
				goods_name = #{goodsName,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.need.common.domain.po.api.distribution.UserDistributionGoodsPO">
		update user_distribution_goods
		set user_id = #{userId,jdbcType=VARCHAR},
		goods_id = #{goodsId,jdbcType=VARCHAR},
		goods_name = #{goodsName,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>


	<select id="getByUserIdAndGoodsId"
		resultType="com.need.common.domain.po.api.distribution.UserDistributionGoodsPO">
		select
		<include refid="Base_Column_List" />
		from user_distribution_goods
		where user_id=#{userId} and goods_id=#{goodsId}
	</select>
	
	<select id="getGoodsByUserId" parameterType="java.lang.String" resultType="com.need.common.domain.vo.distribution.DistributionGoodsVO">
	  select g.goods_id, g.scene_pic_key as topicPicKey
	  from user_distribution_goods u inner join goods_main g on u.goods_id=g.goods_id
	  where u.user_id=#{userId}
	  
	</select>
</mapper>