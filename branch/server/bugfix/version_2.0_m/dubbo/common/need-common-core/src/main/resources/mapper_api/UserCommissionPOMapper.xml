<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.need.common.core.dao.jdbc.distribution.UserCommissionDAO">
    <resultMap id="BaseResultMap"
               type="com.need.common.domain.po.api.distribution.UserCommissionPO">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="goods_id" property="goodsId" jdbcType="VARCHAR"/>
        <result column="goods_name" property="goodsName" jdbcType="VARCHAR"/>
        <result column="top_pic_key" property="topPicKey" jdbcType="VARCHAR"/>
        <result column="trade_no" property="tradeNo" jdbcType="VARCHAR"/>
        <result column="user_trade_no" property="userTradeNo"
                jdbcType="VARCHAR"/>
        <result column="pay_price" property="payPrice" jdbcType="INTEGER"/>
        <result column="fail_reason" property="failReason" jdbcType="VARCHAR"/>
        <result column="commission" property="commission" jdbcType="INTEGER"/>
        <result column="commission_status" property="commissionStatus"
                jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime"
                jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime"
                jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, goods_id, goods_name, top_pic_key, trade_no, user_trade_no, pay_price, commission,
        commission_status, create_time, update_time, fail_reason
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from user_commission
        where id = #{id}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM user_commission
        WHERE id = #{id}
    </delete>
    <insert id="insert"
            parameterType="com.need.common.domain.po.api.distribution.UserCommissionPO">
        INSERT INTO user_commission (id, user_id, goods_id,
                                     goods_name, top_pic_key, trade_no, user_trade_no,
                                     pay_price, commission, commission_status,
                                     create_time, update_time, fail_reason)
        VALUES
            (#{id}, #{userId}, #{goodsId}, 
        #{goodsName}, #{topPicKey}, #{tradeNo}, #{userTradeNo},
        #{payPrice}, #{commission}, #{commissionStatus},
        #{createTime}, #{updateTime},#{failReason})
    </insert>
    <insert id="insertSelective"
            parameterType="com.need.common.domain.po.api.distribution.UserCommissionPO">
        insert into user_commission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="goodsId != null">
                goods_id,
            </if>
            <if test="goodsName != null">
                goods_name,
            </if>
            <if test="topPicKey != null">
                top_pic_key,
            </if>
            <if test="tradeNo != null">
                trade_no,
            </if>
            <if test="userTradeNo != null">
                user_trade_no,
            </if>
            <if test="payPrice != null">
                pay_price,
            </if>
            <if test="commission != null">
                commission,
            </if>
            <if test="commissionStatus != null">
                commission_status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="failReason != null">
                fail_reason,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="userId != null">
                #{userId},
            </if>
            <if test="goodsId != null">
                #{goodsId},
            </if>
            <if test="goodsName != null">
                #{goodsName},
            </if>
            <if test="topPicKey != null">
                #{topPicKey},
            </if>
            <if test="tradeNo != null">
                #{tradeNo},
            </if>
            <if test="userTradeNo != null">
                #{userTradeNo},
            </if>
            <if test="payPrice != null">
                #{payPrice},
            </if>
            <if test="commission != null">
                #{commission},
            </if>
            <if test="commissionStatus != null">
                #{commissionStatus},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
            <if test="failReason != null">
                #{failReason},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.need.common.domain.po.api.distribution.UserCommissionPO">
        update user_commission
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="goodsId != null">
                goods_id = #{goodsId},
            </if>
            <if test="goodsName != null">
                goods_name = #{goodsName},
            </if>
            <if test="topPicKey != null">
                top_pic_key = #{topPicKey},
            </if>
            <if test="tradeNo != null">
                trade_no = #{tradeNo},
            </if>
            <if test="userTradeNo != null">
                user_trade_no = #{userTradeNo},
            </if>
            <if test="payPrice != null">
                pay_price = #{payPrice},
            </if>
            <if test="commission != null">
                commission = #{commission},
            </if>
            <if test="commissionStatus != null">
                commission_status = #{commissionStatus},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="failReason != null">
                fail_reason = #{failReason},
            </if>
        </set>
        where id = #{id}
    </update>
    <update id="updateByPrimaryKey"
            parameterType="com.need.common.domain.po.api.distribution.UserCommissionPO">
        UPDATE user_commission
        SET user_id = #{userId},
        goods_id = #{goodsId},
        goods_name = #{goodsName},
        top_pic_key = #{topPicKey},
        trade_no = #{tradeNo},
        user_trade_no = #{userTradeNo},
        pay_price = #{payPrice},
        commission = #{commission},
        commission_status = #{commissionStatus},
        create_time = #{createTime},
        update_time = #{updateTime},
        fail_reason = #{failReason}
        WHERE id = #{id}
    </update>

    <select id="UserCommissionDAO" parameterType="java.lang.String"
            resultType="com.need.common.domain.vo.distribution.DistributionGoodsVO">
        SELECT
            g.goods_id,
            g.scene_pic_key AS topicPicKey
        FROM user_distribution_goods u,
            goods_main g INNER JOIN u.goods_id=g.goods_id
        WHERE u.user_id =#{userId}
    </select>


    <select id="queryGoodsByUserId" parameterType="java.lang.String"
            resultType="com.need.common.domain.po.api.distribution.UserCommissionPO">
        select
        <include refid="Base_Column_List"/>
        from user_commission
        where user_id = #{userId}
    </select>


    <select id="getSumIncome" parameterType="java.lang.String"
            resultType="java.lang.Integer">
        SELECT SUM(commission)
        FROM user_commission
        WHERE user_id
              =#{userId} and commission_status in ('WAIT_TO_IN','HAS_INCOME')
    </select>
</mapper>