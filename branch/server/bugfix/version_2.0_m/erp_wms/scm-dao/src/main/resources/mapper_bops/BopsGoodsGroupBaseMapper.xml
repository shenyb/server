<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.need.dao.bops.goodsgroup.BopsGoodsGroupBaseDAO" >
  <resultMap id="BaseResultMap" type="com.need.domain.po.bops.goodsgroup.BopsGoodsGroupBase" >
    <id column="group_batch" property="groupBatch" jdbcType="VARCHAR" />
    <result column="rule_type" property="ruleType" jdbcType="VARCHAR" />
    <result column="rule_content" property="ruleContent" jdbcType="VARCHAR" />
    <result column="group_name" property="groupName" jdbcType="VARCHAR" />
    <result column="group_brief" property="groupBrief" jdbcType="VARCHAR" />
    <result column="group_status" property="groupStatus" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
    <result column="audit_id" property="auditId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    group_batch, rule_type, rule_content, group_name, group_brief, group_status, start_time, 
    end_time, create_time, update_time, create_id, update_id, audit_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bops_goods_group_base
    where group_batch = #{groupBatch,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from bops_goods_group_base
    where group_batch = #{groupBatch,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.need.domain.po.bops.goodsgroup.BopsGoodsGroupBase" >
    insert into bops_goods_group_base (group_batch, rule_type, rule_content, 
      group_name, group_brief, group_status, 
      start_time, end_time, create_time, 
      update_time, create_id, update_id, 
      audit_id)
    values (#{groupBatch,jdbcType=VARCHAR}, #{ruleType,jdbcType=VARCHAR}, #{ruleContent,jdbcType=VARCHAR}, 
      #{groupName,jdbcType=VARCHAR}, #{groupBrief,jdbcType=VARCHAR}, #{groupStatus,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=INTEGER}, #{updateId,jdbcType=INTEGER}, 
      #{auditId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.need.domain.po.bops.goodsgroup.BopsGoodsGroupBase" >
    insert into bops_goods_group_base
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="groupBatch != null" >
        group_batch,
      </if>
      <if test="ruleType != null" >
        rule_type,
      </if>
      <if test="ruleContent != null" >
        rule_content,
      </if>
      <if test="groupName != null" >
        group_name,
      </if>
      <if test="groupBrief != null" >
        group_brief,
      </if>
      <if test="groupStatus != null" >
        group_status,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
      <if test="auditId != null" >
        audit_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="groupBatch != null" >
        #{groupBatch,jdbcType=VARCHAR},
      </if>
      <if test="ruleType != null" >
        #{ruleType,jdbcType=VARCHAR},
      </if>
      <if test="ruleContent != null" >
        #{ruleContent,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null" >
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="groupBrief != null" >
        #{groupBrief,jdbcType=VARCHAR},
      </if>
      <if test="groupStatus != null" >
        #{groupStatus,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="auditId != null" >
        #{auditId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.need.domain.po.bops.goodsgroup.BopsGoodsGroupBase" >
    update bops_goods_group_base
    <set >
      <if test="ruleType != null" >
        rule_type = #{ruleType,jdbcType=VARCHAR},
      </if>
      <if test="ruleContent != null" >
        rule_content = #{ruleContent,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null" >
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="groupBrief != null" >
        group_brief = #{groupBrief,jdbcType=VARCHAR},
      </if>
      <if test="groupStatus != null" >
        group_status = #{groupStatus,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="auditId != null" >
        audit_id = #{auditId,jdbcType=INTEGER},
      </if>
    </set>
    where group_batch = #{groupBatch,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.need.domain.po.bops.goodsgroup.BopsGoodsGroupBase" >
    update bops_goods_group_base
    set rule_type = #{ruleType,jdbcType=VARCHAR},
      rule_content = #{ruleContent,jdbcType=VARCHAR},
      group_name = #{groupName,jdbcType=VARCHAR},
      group_brief = #{groupBrief,jdbcType=VARCHAR},
      group_status = #{groupStatus,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = NOW(),
      create_id = #{createId,jdbcType=INTEGER},
      update_id = #{updateId,jdbcType=INTEGER},
      audit_id = #{auditId,jdbcType=INTEGER}
    where group_batch = #{groupBatch,jdbcType=VARCHAR}
  </update>
  
  
   <select id="queryAll" parameterType="com.need.domain.vo.goodsgroup.GoodsGroupVO" resultType="com.need.domain.vo.goodsgroup.GoodsGroupResultVO">
    select 
     <include refid="Base_Column_List"/>
     from  bops_goods_group_base 
       where
      <![CDATA[create_time <= NOW()]]>
        <if test="groupBatch != null and groupBatch!=''" >
			and  group_batch =#{groupBatch}	
	    </if>
	    <if test="groupName != null and groupName!=''" >
			and  group_name like CONCAT('%','${groupName}','%' ) 
	    </if>
	    <if test="groupStatus != null and groupStatus!=''" >
			and  group_status = #{groupStatus}
	    </if>
	    <if test="createId != null and createId!=''" >
			and  create_id = #{createId}
	    </if>	
	     order by  create_time DESC
		limit #{start},#{pageSize}
   </select>
   
   
    <select id="getCount" parameterType="com.need.domain.vo.goodsgroup.GoodsGroupVO" resultType="int">
    select count(1)
     from  bops_goods_group_base 
       where
      <![CDATA[create_time <= NOW()]]>
        <if test="groupBatch != null and groupBatch!=''" >
			and  group_batch =#{groupBatch}	
	    </if>
	    <if test="groupName != null and groupName!=''" >
			and  group_name like CONCAT('%','${groupName}','%' ) 
	    </if>
	    <if test="groupStatus != null and groupStatus!=''" >
			and  group_status = #{groupStatus}
	    </if>
	    <if test="createId != null and createId!=''" >
			and  create_id = #{createId}
	    </if>
    </select>
    
    
    <update id="updateStatus" >
     update bops_goods_group_base 
      set 
        group_status=#{groupStatus},
        update_time=now(),
        audit_id = #{auditId} 
         where group_batch = #{groupBatch} 
    
    </update>
</mapper>