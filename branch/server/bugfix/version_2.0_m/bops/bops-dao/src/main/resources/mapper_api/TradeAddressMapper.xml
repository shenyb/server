<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.need.dao.api.trade.TradeAddressDAO" >
  <resultMap id="BaseResultMap" type="com.need.domain.po.api.trade.TradeAddressPO" >
    <id column="address_id" property="addressId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="logistics_id" property="logisticsId" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="logistics_value" property="logisticsValue" jdbcType="VARCHAR" />
    <result column="is_default" property="isDefault" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="receiver" property="receiver" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    address_id, user_id, logistics_id, logistics_value, address, create_time, receiver, is_default, telephone
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from trade_address
    where address_id = #{addressId,jdbcType=VARCHAR}
  </select>
  
  <select id="CountUserAddress" resultType="int" parameterType="java.lang.String" >
    select 
    count(user_id)
    from trade_address
    where user_id = #{userId}
  </select>
  
  <select id="queryAddressList" resultType="com.need.domain.vo.trade.address.AddressResultVO" parameterType="java.lang.String" >
    select 
    address_id, user_id, logistics_id, logistics_value, address, create_time, receiver, is_default, telephone
    from trade_address
    where user_id = #{userId}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from trade_address
    where address_id = #{addressId,jdbcType=VARCHAR}
  </delete>
  
  <delete id="removeAddressList" parameterType="java.lang.String" >
    delete from trade_address
    where address_id in ( #{addressId} )
  </delete>
  
  <delete id="deleteByAddressId" parameterType="java.lang.String" >
    delete from trade_address
    where address_id = #{addressId} 
  </delete>

  <delete id="removeDefaultAddress" parameterType="java.lang.String" >
    delete from trade_address
    where address_id = #{addressId} 
  </delete>
  

  
  <insert id="insert" parameterType="com.need.domain.po.api.trade.TradeAddressPO" >
    insert into trade_address (address_id, user_id, logistics_id, 
      address, create_time, logistics_value)
    values (#{addressId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{logisticsId,jdbcType=INTEGER}, 
      #{address,jdbcType=VARCHAR}, NOW(), #{logisticsValue})
  </insert>
  
  <insert id="insertNewAddress" parameterType="com.need.domain.vo.trade.address.AddressParamVO" >
    insert into trade_address (address_id, user_id, logistics_id, 
      address, create_time, logistics_value, receiver, telephone, is_default)
    values (#{addressId}, #{userId}, #{logisticsId}, 
      #{address}, NOW(), #{logisticsValue}, #{receiver}, #{telephone}, #{isDefault})
  </insert>
  
  <insert id="insertSelective" parameterType="com.need.domain.po.api.trade.TradeAddressPO" >
    insert into trade_address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="addressId != null" >
        address_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="logisticsId != null" >
        logistics_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="addressId != null" >
        #{addressId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="logisticsId != null" >
        #{logisticsId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
  <update id="updateByAddressId" parameterType="com.need.domain.vo.trade.address.AddressParamVO" >
    update trade_address
    set 
      logistics_id = #{logisticsId},
      address = #{address},
      receiver = #{receiver},
      telephone = #{telephone},
      logistics_value = #{logisticsValue}
    where address_id = #{addressId}
  </update>
  
  
  <update id="updateDefaultByAddressId" >
    update trade_address
    set is_default = #{isDefault}
    where address_id = #{addressId}
  </update>
  
  
  
  <update id="updateByPrimaryKeySelective" parameterType="com.need.domain.po.api.trade.TradeAddressPO" >
    update trade_address
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="logisticsId != null" >
        logistics_id = #{logisticsId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where address_id = #{addressId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.need.domain.po.api.trade.TradeAddressPO" >
    update trade_address
    set user_id = #{userId,jdbcType=VARCHAR},
      logistics_id = #{logisticsId,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where address_id = #{addressId,jdbcType=VARCHAR}
  </update>
  <select id="getDefaultAddress" parameterType="java.lang.String" resultType="com.need.domain.po.api.trade.TradeAddressPO">
   select 
    <include refid="Base_Column_List" />
    from trade_address
    where is_default='TRUE' and user_id = #{0}
  </select>
</mapper>