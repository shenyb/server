<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.need.dao.bops.goodsgroup.BopsGoodsGroupDAO" >
  <resultMap id="BaseResultMap" type="com.need.domain.po.bops.goodsgroup.BopsGoodsGroup" >
    <id column="goods_id" property="goodsId" jdbcType="VARCHAR" />
    <id column="group_batch" property="groupBatch" jdbcType="VARCHAR" />
    <result column="goods_code" property="goodsCode" jdbcType="VARCHAR" />
    <result column="goods_pic_key" property="goodsPicKey" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    goods_id, group_batch, goods_code, goods_pic_key, create_time, update_time, create_id, 
    update_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.need.domain.po.bops.goodsgroup.BopsGoodsGroup" >
    select 
    <include refid="Base_Column_List" />
    from bops_goods_group
    where goods_id = #{goodsId,jdbcType=VARCHAR}
      and group_batch = #{groupBatch,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.need.domain.po.bops.goodsgroup.BopsGoodsGroupKey" >
    delete from bops_goods_group
    where goods_id = #{goodsId,jdbcType=VARCHAR}
      and group_batch = #{groupBatch,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.need.domain.po.bops.goodsgroup.BopsGoodsGroup" >
    insert into bops_goods_group (goods_id, group_batch, goods_code, 
      goods_pic_key, create_time, update_time, 
      create_id, update_id)
    values (#{goodsId,jdbcType=VARCHAR}, #{groupBatch,jdbcType=VARCHAR}, #{goodsCode,jdbcType=VARCHAR}, 
      #{goodsPicKey,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createId,jdbcType=INTEGER}, #{updateId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.need.domain.po.bops.goodsgroup.BopsGoodsGroup" >
    insert into bops_goods_group
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="groupBatch != null" >
        group_batch,
      </if>
      <if test="goodsCode != null" >
        goods_code,
      </if>
      <if test="goodsPicKey != null" >
        goods_pic_key,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodsId != null" >
        #{goodsId,jdbcType=VARCHAR},
      </if>
      <if test="groupBatch != null" >
        #{groupBatch,jdbcType=VARCHAR},
      </if>
      <if test="goodsCode != null" >
        #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsPicKey != null" >
        #{goodsPicKey,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.need.domain.po.bops.goodsgroup.BopsGoodsGroup" >
    update bops_goods_group
    <set >
      <if test="goodsCode != null" >
        goods_code = #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsPicKey != null" >
        goods_pic_key = #{goodsPicKey,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
    </set>
    where goods_id = #{goodsId,jdbcType=VARCHAR}
      and group_batch = #{groupBatch,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.need.domain.po.bops.goodsgroup.BopsGoodsGroup" >
    update bops_goods_group
    set goods_code = #{goodsCode,jdbcType=VARCHAR},
      goods_pic_key = #{goodsPicKey,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=INTEGER},
      update_id = #{updateId,jdbcType=INTEGER}
    where goods_id = #{goodsId,jdbcType=VARCHAR}
      and group_batch = #{groupBatch,jdbcType=VARCHAR}
  </update>
  
  <select id="getByOpsIdAndGoodsId" resultMap="BaseResultMap">
   select 
    <include refid="Base_Column_List"/>
    from bops_goods_group
    where group_batch =#{groupBatch} and goods_id=#{goodsId}
  </select>
  
   <select id="getCountBybatch" parameterType="com.need.domain.vo.goodsgroup.GoodsGroupParaVO" resultType="int">
     select count(1)
      from bops_goods_group c inner join bops_goods g on c.goods_id=g.goods_id
      where c.group_batch=#{groupBatch} 
       <if test="goodsCode != null and goodsCode!=''" >
			and  g.goods_code =#{goodsCode}	
	    </if>
	    <if test="goodsName != null and goodsName!=''" >
			and  g.goods_name like CONCAT('%','${goodsName}','%' ) 
	    </if>
	    <if test="warehouseType != null and warehouseType!=''" >
			and  g.warehouse_type = #{warehouseType}
	    </if>	
   </select>
   
    <select id="queryByBatch" parameterType="com.need.domain.vo.goodsgroup.GoodsGroupParaVO" resultType="com.need.domain.vo.goodsgroup.GoodsGroupParaVO">
     select c.group_batch, g.goods_code, g.goods_id,g.goods_name,g.onsale_price,g.discount_price,g.brief,g.scene_pic_key,g.warehouse_type,g.goods_status,g.update_time
      from bops_goods_group c inner join bops_goods g on c.goods_id=g.goods_id
      where c.group_batch=#{groupBatch}
       <if test="goodsCode != null and goodsCode!=''" >
			and  g.goods_code =#{goodsCode}	
	    </if>
	    <if test="goodsName != null and goodsName!=''" >
			and  g.goods_name like CONCAT('%','${goodsName}','%' ) 
	    </if>
	    <if test="warehouseType != null and warehouseType!=''" >
			and  g.warehouse_type = #{warehouseType}
	    </if>	
		limit #{start},#{pageSize}
    </select>
    
    
     <select id="getCount" parameterType="java.lang.String" resultType="int">
      select count(1)
      from bops_goods_group
      where group_batch=#{groupBatch} 
      
     
     </select>
</mapper>