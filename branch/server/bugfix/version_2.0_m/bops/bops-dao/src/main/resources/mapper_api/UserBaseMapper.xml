<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.need.dao.api.user.UserBaseDAO">
	<resultMap id="BaseResultMap" type="com.need.domain.po.api.user.UserBase">
		<id column="user_id" jdbcType="VARCHAR" property="userId" />
		<result column="mobile" jdbcType="VARCHAR" property="mobile" />
		<result column="nick_name" jdbcType="VARCHAR" property="nickName" />
		<result column="login_pwd" jdbcType="VARCHAR" property="loginPwd" />
		<result column="user_type" jdbcType="VARCHAR" property="userType" />
		<result column="user_status" jdbcType="VARCHAR" property="userStatus" />
		<result column="profile_pic_key" jdbcType="VARCHAR" property="profilePicKey" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	</resultMap>
	<sql id="Base_Column_List">
		user_id, mobile, nick_name, login_pwd, user_type,
		user_status,
		profile_pic_key, create_time,
		update_time
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_base
		where user_id = #{userId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		user_base
		where user_id = #{userId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.need.domain.po.api.user.UserBase">
		insert into user_base
		(user_id, mobile, nick_name,
		login_pwd, user_type, user_status,
		profile_pic_key, create_time, update_time
		)
		values
		(#{userId,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR},
		#{nickName,jdbcType=VARCHAR},
		#{loginPwd,jdbcType=VARCHAR},
		#{userType,jdbcType=VARCHAR}, #{userStatus,jdbcType=VARCHAR},
		#{profilePicKey,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.need.domain.po.api.user.UserBase">
		insert into user_base
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="nickName != null">
				nick_name,
			</if>
			<if test="loginPwd != null">
				login_pwd,
			</if>
			<if test="userType != null">
				user_type,
			</if>
			<if test="userStatus != null">
				user_status,
			</if>
			<if test="profilePicKey != null">
				profile_pic_key,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="nickName != null">
				#{nickName,jdbcType=VARCHAR},
			</if>
			<if test="loginPwd != null">
				#{loginPwd,jdbcType=VARCHAR},
			</if>
			<if test="userType != null">
				#{userType,jdbcType=VARCHAR},
			</if>
			<if test="userStatus != null">
				#{userStatus,jdbcType=VARCHAR},
			</if>
			<if test="profilePicKey != null">
				#{profilePicKey,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.need.domain.po.api.user.UserBase">
		update user_base
		<set>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="nickName != null">
				nick_name = #{nickName,jdbcType=VARCHAR},
			</if>
			<if test="loginPwd != null">
				login_pwd = #{loginPwd,jdbcType=VARCHAR},
			</if>
			<if test="userType != null">
				user_type = #{userType,jdbcType=VARCHAR},
			</if>
			<if test="userStatus != null">
				user_status = #{userStatus,jdbcType=VARCHAR},
			</if>
			<if test="profilePicKey != null">
				profile_pic_key = #{profilePicKey,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where user_id = #{userId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.need.domain.po.api.user.UserBase">
		update user_base
		set mobile = #{mobile,jdbcType=VARCHAR},
		nick_name =
		#{nickName,jdbcType=VARCHAR},
		login_pwd = #{loginPwd,jdbcType=VARCHAR},
		user_type = #{userType,jdbcType=VARCHAR},
		user_status =
		#{userStatus,jdbcType=VARCHAR},
		profile_pic_key =
		#{profilePicKey,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP}
		where user_id =
		#{userId,jdbcType=VARCHAR}
	</update>

	<select id="getUserInfo" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_base
		where user_id = #{userId,jdbcType=VARCHAR}
	</select>

	<select id="selectAllUserBase" parameterType="com.need.domain.po.api.user.UserBase"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_base
		limit #{userInfoParam.start}, #{userInfoParam.pageSize}
	</select>

	<select id="selectUserBaseByMobile" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_base where mobile=#{0}
	</select>

	<select id="selectUserBaseByNickName" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_base where nick_name=#{0}
	</select>

	<select id="mobileIsExist" parameterType="java.lang.String"  resultType="int">
		select count(*) from user_base where mobile = #{mobile}
	</select>
	<update id="updateUserStatus" parameterType="java.lang.String">
		update user_base
		set user_status = #{userStatus}	
		where user_id = #{userId}
		
	</update>
	

</mapper>