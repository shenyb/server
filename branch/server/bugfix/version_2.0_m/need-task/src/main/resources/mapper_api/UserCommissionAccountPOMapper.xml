<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
        namespace="com.need.task.dao.jdbc.api.distribution.UserCommissionAccountDAO">
    <resultMap id="BaseResultMap"
               type="com.need.task.dao.jdbc.api.distribution.po.UserCommissionAccountPO">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <id column="account_id" property="accountId" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="account_balance" property="accountBalance"
                jdbcType="INTEGER"/>
        <result column="account_status" property="accountStatus"
                jdbcType="VARCHAR"/>
        <result column="start_time" property="startTime" jdbcType="TIMESTAMP"/>
        <result column="end_time" property="endTime" jdbcType="TIMESTAMP"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,account_id, user_id, account_balance, account_status,
        start_time, end_time,
        create_time,
        update_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user_commission_account
        where account_id =
        #{accountId}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from
        user_commission_account
        where account_id =#{accountId}
    </delete>
    <insert id="insert"
            parameterType="com.need.task.dao.jdbc.api.distribution.po.UserCommissionAccountPO"
            useGeneratedKeys="true" keyProperty="id">
        insert into
        user_commission_account (id,account_id, user_id,
        account_balance,
        account_status, start_time, end_time,
        create_time, update_time)
        values
        (#{id},#{accountId}, #{userId},
        #{accountBalance},
        #{accountStatus},
        now(),'2037-11-19 12:00:00',
        now(), now())
    </insert>

    <update id="updateByPrimaryKey"
            parameterType="com.need.task.dao.jdbc.api.distribution.po.UserCommissionAccountPO">
        update user_commission_account
        set user_id =
        #{userId},
        account_balance =
        #{accountBalance},
        account_status =
        #{accountStatus},
        start_time =
        #{startTime},
        end_time =
        #{endTime},
        create_time =
        #{createTime},
        update_time =
        #{updateTime}
        where account_id =
        #{accountId}
    </update>

    <select id="getByUserId" parameterType="java.lang.String"
            resultType="com.need.task.dao.jdbc.api.distribution.po.UserCommissionAccountPO">
        select
        <include refid="Base_Column_List"/>
        from user_commission_account
        where user_id = #{userId}
    </select>

    <select id="getAvailableByUserId" parameterType="java.lang.String"
            resultType="java.lang.Integer">
        select SUM(account_balance) from user_commission_account where
        account_status ='USE' and account_status=#{userId}
    </select>
</mapper>