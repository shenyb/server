<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.need.task.dao.jdbc.api.distribution.UserCommissionDAO">
    <resultMap id="BaseResultMap"
               type="com.need.task.dao.jdbc.api.distribution.po.UserCommissionPO">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="goods_id" property="goodsId" jdbcType="VARCHAR"/>
        <result column="goods_name" property="goodsName" jdbcType="VARCHAR"/>
        <result column="top_pic_key" property="topPicKey" jdbcType="VARCHAR"/>
        <result column="trade_no" property="tradeNo" jdbcType="VARCHAR"/>
        <result column="user_trade_no" property="userTradeNo" jdbcType="VARCHAR"/>
        <result column="pay_price" property="payPrice" jdbcType="INTEGER"/>
        <result column="fail_reason" property="failReason" jdbcType="VARCHAR"/>
        <result column="commission" property="commission" jdbcType="INTEGER"/>
        <result column="commission_status" property="commissionStatus"
                jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, goods_id, goods_name, top_pic_key, trade_no,
        user_trade_no,
        pay_price, commission,
        commission_status, create_time,
        update_time, fail_reason
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from user_commission
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM
        user_commission
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert"
            parameterType="com.need.task.dao.jdbc.api.distribution.po.UserCommissionPO">
        INSERT INTO user_commission (id, user_id, goods_id,
        goods_name, top_pic_key, trade_no, user_trade_no,
        pay_price, commission,
        commission_status,
        create_time, update_time, fail_reason)
        VALUES
        (#{id,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR},
        #{goodsId,jdbcType=VARCHAR},
        #{goodsName,jdbcType=VARCHAR},
        #{topPicKey,jdbcType=VARCHAR}, #{tradeNo,jdbcType=VARCHAR},
        #{userTradeNo,jdbcType=VARCHAR},
        #{payPrice,jdbcType=INTEGER},
        #{commission,jdbcType=INTEGER}, #{commissionStatus,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP},#{failReason})
    </insert>

    <update id="updateByPrimaryKey"
            parameterType="com.need.task.dao.jdbc.api.distribution.po.UserCommissionPO">
        UPDATE user_commission
        SET user_id =
        #{userId,jdbcType=VARCHAR},
        goods_id = #{goodsId,jdbcType=VARCHAR},
        goods_name = #{goodsName,jdbcType=VARCHAR},
        top_pic_key =
        #{topPicKey,jdbcType=VARCHAR},
        trade_no = #{tradeNo,jdbcType=VARCHAR},
        user_trade_no = #{userTradeNo,jdbcType=VARCHAR},
        pay_price =
        #{payPrice,jdbcType=INTEGER},
        commission =
        #{commission,jdbcType=INTEGER},
        commission_status =
        #{commissionStatus,jdbcType=VARCHAR},
        create_time =
        #{createTime,jdbcType=TIMESTAMP},
        update_time =
        #{updateTime,jdbcType=TIMESTAMP},
        fail_reason = #{failReason}
        WHERE id =
        #{id,jdbcType=BIGINT}
    </update>

    <select id="queryGoodsByUserId" parameterType="java.lang.String"
            resultType="com.need.task.dao.jdbc.api.distribution.po.UserCommissionPO">
        select
        <include refid="Base_Column_List"/>
        from user_commission
        where user_id = #{userId}
    </select>


    <select id="getSumIncome" parameterType="java.lang.String"
            resultType="java.lang.Integer">
        SELECT SUM(commission)
        FROM user_commission
        WHERE
        user_id = #{userId} and commission_status in
        ('WAIT_TO_IN', 'HAS_INCOME')
    </select>

    <select id="queryByWaitToInList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_commission
        where commission_status='WAIT_TO_IN'
    </select>

    <update id="updateBatchById" parameterType="java.util.Map">
        update user_commission
        set
        commission_status =
        #{commissionStatus},
        update_time =
        NOW()
        where id in
        <foreach collection="list" item="item" index="index" open="("
                 separator="," close=")">
            #{item.id}
        </foreach>

    </update>
</mapper>