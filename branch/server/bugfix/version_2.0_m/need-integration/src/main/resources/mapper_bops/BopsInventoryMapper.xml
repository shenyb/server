<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.need.integration.dao.jdbc.bops.store.BopsInventoryDAO" >
  <resultMap id="BaseResultMap" type="com.need.integration.dao.jdbc.bops.store.po.BopsInventoryPO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="vendor_id" property="vendorId" jdbcType="BIGINT" />
    <result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
    <result column="goods_code" property="goodsCode" jdbcType="VARCHAR" />
    <result column="cost" property="cost" jdbcType="INTEGER" />
    <result column="order_freeze" property="orderFreeze" jdbcType="INTEGER" />
    <result column="other_freeze" property="otherFreeze" jdbcType="INTEGER" />
    <result column="normal_quantity" property="normalQuantity" jdbcType="INTEGER" />
    <result column="demage_quantity" property="demageQuantity" jdbcType="INTEGER" />
    <result column="demage_freeze" property="demageFreeze" jdbcType="INTEGER" />
    <result column="purchase_price" property="purchasePrice" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="change_at" property="changeAt" jdbcType="TIMESTAMP" />
    <result column="change_by" property="changeBy" jdbcType="VARCHAR" />
    <result column="warehouse_id" property="warehouseId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, vendor_id, goods_id, goods_code, cost, order_freeze, other_freeze, normal_quantity, 
    demage_quantity, demage_freeze, purchase_price, created_at, created_by, change_at, 
    change_by, warehouse_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from bops_inventory
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from bops_inventory
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.need.integration.dao.jdbc.bops.store.po.BopsInventoryPO" >
    insert into bops_inventory (id, vendor_id, goods_id, 
      goods_code, cost, order_freeze, 
      other_freeze, normal_quantity, demage_quantity, 
      demage_freeze, purchase_price, created_at, 
      created_by, change_at, change_by, 
      warehouse_id)
    values (#{id,jdbcType=BIGINT}, #{vendorId,jdbcType=BIGINT}, #{goodsId,jdbcType=VARCHAR}, 
      #{goodsCode,jdbcType=VARCHAR}, #{cost,jdbcType=INTEGER}, #{orderFreeze,jdbcType=INTEGER}, 
      #{otherFreeze,jdbcType=INTEGER}, #{normalQuantity,jdbcType=INTEGER}, #{demageQuantity,jdbcType=INTEGER}, 
      #{demageFreeze,jdbcType=INTEGER}, #{purchasePrice,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{createdBy,jdbcType=VARCHAR}, #{changeAt,jdbcType=TIMESTAMP}, #{changeBy,jdbcType=VARCHAR}, 
      #{warehouseId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.need.integration.dao.jdbc.bops.store.po.BopsInventoryPO" >
    insert into bops_inventory
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="vendorId != null" >
        vendor_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="goodsCode != null" >
        goods_code,
      </if>
      <if test="cost != null" >
        cost,
      </if>
      <if test="orderFreeze != null" >
        order_freeze,
      </if>
      <if test="otherFreeze != null" >
        other_freeze,
      </if>
      <if test="normalQuantity != null" >
        normal_quantity,
      </if>
      <if test="demageQuantity != null" >
        demage_quantity,
      </if>
      <if test="demageFreeze != null" >
        demage_freeze,
      </if>
      <if test="purchasePrice != null" >
        purchase_price,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="changeAt != null" >
        change_at,
      </if>
      <if test="changeBy != null" >
        change_by,
      </if>
      <if test="warehouseId != null" >
        warehouse_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="vendorId != null" >
        #{vendorId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=VARCHAR},
      </if>
      <if test="goodsCode != null" >
        #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="cost != null" >
        #{cost,jdbcType=INTEGER},
      </if>
      <if test="orderFreeze != null" >
        #{orderFreeze,jdbcType=INTEGER},
      </if>
      <if test="otherFreeze != null" >
        #{otherFreeze,jdbcType=INTEGER},
      </if>
      <if test="normalQuantity != null" >
        #{normalQuantity,jdbcType=INTEGER},
      </if>
      <if test="demageQuantity != null" >
        #{demageQuantity,jdbcType=INTEGER},
      </if>
      <if test="demageFreeze != null" >
        #{demageFreeze,jdbcType=INTEGER},
      </if>
      <if test="purchasePrice != null" >
        #{purchasePrice,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="changeAt != null" >
        #{changeAt,jdbcType=TIMESTAMP},
      </if>
      <if test="changeBy != null" >
        #{changeBy,jdbcType=VARCHAR},
      </if>
      <if test="warehouseId != null" >
        #{warehouseId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateStore" parameterType="com.need.integration.dao.jdbc.bops.store.po.BopsInventoryPO">
		update bops_inventory
		set normal_quantity = normal_quantity - ${buyCount},
		order_freeze = order_freeze - ${buyCount}
		where goods_id = #{goodsId}
	</update>
  <update id="updateByPrimaryKeySelective" parameterType="com.need.integration.dao.jdbc.bops.store.po.BopsInventoryPO" >
    update bops_inventory
    <set >
      <if test="vendorId != null" >
        vendor_id = #{vendorId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=VARCHAR},
      </if>
      <if test="goodsCode != null" >
        goods_code = #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="cost != null" >
        cost = #{cost,jdbcType=INTEGER},
      </if>
      <if test="orderFreeze != null" >
        order_freeze = #{orderFreeze,jdbcType=INTEGER},
      </if>
      <if test="otherFreeze != null" >
        other_freeze = #{otherFreeze,jdbcType=INTEGER},
      </if>
      <if test="normalQuantity != null" >
        normal_quantity = #{normalQuantity,jdbcType=INTEGER},
      </if>
      <if test="demageQuantity != null" >
        demage_quantity = #{demageQuantity,jdbcType=INTEGER},
      </if>
      <if test="demageFreeze != null" >
        demage_freeze = #{demageFreeze,jdbcType=INTEGER},
      </if>
      <if test="purchasePrice != null" >
        purchase_price = #{purchasePrice,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="changeAt != null" >
        change_at = #{changeAt,jdbcType=TIMESTAMP},
      </if>
      <if test="changeBy != null" >
        change_by = #{changeBy,jdbcType=VARCHAR},
      </if>
      <if test="warehouseId != null" >
        warehouse_id = #{warehouseId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.need.integration.dao.jdbc.bops.store.po.BopsInventoryPO" >
    update bops_inventory
    set vendor_id = #{vendorId,jdbcType=BIGINT},
      goods_id = #{goodsId,jdbcType=VARCHAR},
      goods_code = #{goodsCode,jdbcType=VARCHAR},
      cost = #{cost,jdbcType=INTEGER},
      order_freeze = #{orderFreeze,jdbcType=INTEGER},
      other_freeze = #{otherFreeze,jdbcType=INTEGER},
      normal_quantity = #{normalQuantity,jdbcType=INTEGER},
      demage_quantity = #{demageQuantity,jdbcType=INTEGER},
      demage_freeze = #{demageFreeze,jdbcType=INTEGER},
      purchase_price = #{purchasePrice,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      change_at = #{changeAt,jdbcType=TIMESTAMP},
      change_by = #{changeBy,jdbcType=VARCHAR},
      warehouse_id = #{warehouseId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
   <select id="selectByGoodsId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bops_inventory
    where goods_id = #{goodsId}
  </select>
</mapper>