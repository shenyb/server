<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.need.integration.dao.jdbc.api.user.UserCertificationDAO" >
  <resultMap id="BaseResultMap" type="com.need.integration.dao.jdbc.api.user.po.UserCertificationPO" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="id_card" property="idCard" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="certification_channel" property="certificationChannel" jdbcType="VARCHAR" />
    <result column="certification_source" property="certificationSource" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, real_name, id_card, user_id, certification_channel, certification_source, create_time
  </sql>
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_certification
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
 <select id="getByIdCard" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_certification
    where id_card = #{idCard,jdbcType=VARCHAR}
  </select>
 
 
  <delete id="deleteById" parameterType="java.lang.String" >
    delete from user_certification
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.need.integration.dao.jdbc.api.user.po.UserCertificationPO" >
    insert into user_certification (id, real_name, id_card, 
      user_id, certification_channel, certification_source, 
      create_time)
    values (#{id,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{certificationChannel,jdbcType=VARCHAR}, #{certificationSource,jdbcType=VARCHAR}, 
      now())
  </insert>
  
  
  <update id="updateById" parameterType="com.need.integration.dao.jdbc.api.user.po.UserCertificationPO" >
    update user_certification
    set real_name = #{realName,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      certification_channel = #{certificationChannel,jdbcType=VARCHAR},
      certification_source = #{certificationSource,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>